version: '3.8'

services:
  # Production frontend service (commented out by default)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - api
  #   environment:
  #     - VITE_API_URL=http://localhost:3000/api
  #   restart: unless-stopped

  # Development frontend service with hot reloading
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000/api
    restart: unless-stopped

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@postgres:5437/ajiro
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev_jwt_secret_change_in_production
      - PORT=3000
    depends_on:
      - postgres
      - redis
    command: ./startup.sh
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    ports:
      - "5437:5437"
    command: -p 5437
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ajiro -p 5437"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ajiro
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: 